---
import { string } from "astro:schema";

const {frontmatter,url}=Astro.props;
const { titulo, descripcion, tiempo, dificultad, raciones, imagen} = frontmatter;


// Función para determinar la clase CSS en función de la dificultad
const dificultadClass = (dificultad: string) => {
  if (dificultad === "facil") return "text-green-500";
  if (dificultad === "medio") return "text-orange-500";
  if (dificultad === "dificil") return "text-red-500";
  return "text-gray-500"; // Clase por defecto si la dificultad no coincide
};

---

<article class="max-w-sm bg-white border border-gray-200 rounded-lg shadow">
  <a href={url}>
    <img class="rounded-t-lg" src={imagen} alt="" />
  </a>
  <div class="p-5">
    <a href={url}>
      <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 ">
        {titulo}
      </h5>
    </a>

    <p class="mb-3 font-normal text-gray-700 ">{descripcion}</p>

    <!-- Dificultad con clase CSS condicional -->
    <p class={`font-semibold ${dificultadClass(dificultad)}`}>
      Dificultad: {dificultad}
    </p>

    <a href={url} class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300">
      Read more
      <svg
        class="rtl:rotate-180 w-3.5 h-3.5 ms-2"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 14 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M1 5h12m0 0L9 1m4 4L9 9"
        />
      </svg>
    </a>
  </div>
</ar>
